name: Terraform CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  terraform-ci:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        env-set: [1, 2] # 1 = dev, 2 = dev2

    defaults:
      run:
        working-directory: ./envs/${{ matrix.env-set == 1 && 'dev' || 'dev2' }}

    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}
          audience: sts.amazonaws.com

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.0

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Format Check
        id: format
        run: terraform fmt -check -recursive

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        env:
          TF_VAR_env: ${{ matrix.env-set == 1 && secrets.ENV || secrets.ENV2 }}
          TF_VAR_vpc_cidr: ${{ matrix.env-set == 1 && secrets.VPC_CIDR || secrets.VPC_CIDR2 }}
          TF_VAR_public_subnet_cidr: ${{ matrix.env-set == 1 && secrets.PUBLIC_SUBNET_CIDR || secrets.PUBLIC_SUBNET_CIDR2 }}
          TF_VAR_az: ${{ matrix.env-set == 1 && secrets.AZ || secrets.AZ2 }}
          TF_VAR_owner: ${{ secrets.OWNER }}
          TF_VAR_private_subnet_cidr: ${{ matrix.env-set == 1 && secrets.PRIVATE_SUBNET_CIDR || secrets.PRIVATE_SUBNET_CIDR2 }}
          TF_VAR_private_az: ${{ matrix.env-set == 1 && secrets.PRIVATE_AZ || secrets.PRIVATE_AZ2 }}
          TF_VAR_ami: ${{ secrets.AMI }}
          TF_VAR_instance_type: ${{ secrets.EC2_INSTANCE_TYPE }}
          TF_VAR_key_name: ${{ secrets.KEY_NAME }}
          TF_VAR_requester_region: ${{ secrets.REQUESTER_REGION }}
          TF_VAR_accepter_region: ${{ secrets.ACCEPTER_REGION }}
        run: terraform plan -input=false

      - name: Security Scan (tfsec)
        uses: aquasecurity/tfsec-action@v1.0.3
